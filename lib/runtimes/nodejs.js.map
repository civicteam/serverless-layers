{"version":3,"sources":["../../src/runtimes/nodejs.js"],"names":["path","require","chalk","NodeJSRuntime","parent","runtime","runtimeDir","plugin","libraryFolder","packageManager","dependenciesPath","compatibleRuntimes","copyBeforeInstall","packageExclude","commands","npm","yarn","settings","localpackageJson","join","process","cwd","localPackage","e","log","exit","run","osVersion","match","runtimeVersion","version","isCompatible","startsWith","depsA","depsB","depsKeyA","Object","keys","depsKeyB","isSizeEqual","length","hasDifference","forEach","dependence","layerPackageJsonPath","dependencies","getLayerPackageDir","bucketService","downloadDependencesFile","remotePackage","isDifferent","parsedRemotePackage","JSON","parse","checksum","isDiff","inverse","yellow","useChecksum","local","getCompiledLayerPackageJson","green","module","exports"],"mappings":"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","sourcesContent":["const path = require('path');\nconst chalk = require('chalk');\n\nclass NodeJSRuntime {\n  constructor(parent, runtime, runtimeDir) {\n    this.parent = parent;\n    this.plugin = parent.plugin;\n\n    this.default = {\n      runtime,\n      runtimeDir,\n      libraryFolder: 'node_modules',\n      packageManager:  'npm',\n      dependenciesPath: 'package.json',\n      compatibleRuntimes: [runtimeDir],\n      copyBeforeInstall: [\n        '.npmrc',\n        'yarn.lock',\n        'package-lock.json'\n      ],\n      packageExclude: [\n        'node_modules/**',\n      ]\n    };\n\n    this.commands = {\n      npm: 'npm install --production --only=prod',\n      yarn: 'yarn --production'\n    };\n  }\n\n  init() {\n    const { dependenciesPath } = this.plugin.settings;\n\n    const localpackageJson = path.join(\n      process.cwd(),\n      dependenciesPath\n    );\n\n    try {\n      this.localPackage = require(localpackageJson);\n    } catch (e) {\n      this.plugin.log(`Error: Can not find ${localpackageJson}!`);\n      process.exit(1);\n    }\n  }\n\n  async isCompatibleVersion(runtime) {\n    const osVersion = await this.parent.run('node --version');\n    const [runtimeVersion] = runtime.match(/([0-9]+)\\./);\n    return {\n      version: osVersion,\n      isCompatible: osVersion.startsWith(`v${runtimeVersion}`)\n    };\n  }\n\n  isDiff(depsA, depsB) {\n    if (!depsA) {\n      return true;\n    }\n\n    const depsKeyA = Object.keys(depsA);\n    const depsKeyB = Object.keys(depsB);\n    const isSizeEqual = depsKeyA.length === depsKeyB.length;\n\n    if (!isSizeEqual) return true;\n\n    let hasDifference = false;\n    Object.keys(depsA).forEach(dependence => {\n      if (depsA[dependence] !== depsB[dependence]) {\n        hasDifference = true;\n      }\n    });\n\n    return hasDifference;\n  }\n\n  getCompiledLayerPackageJson() {\n    const { dependenciesPath } = this.plugin.settings;\n\n    const layerPackageJsonPath = path.join(\n      this.plugin.dependencies.getLayerPackageDir(),\n      dependenciesPath\n    );\n\n    try {\n      return require(layerPackageJsonPath);\n    } catch (e) {\n      this.plugin.log(`Error: Can not find ${layerPackageJsonPath}!`);\n      process.exit(1);\n    }\n  }\n\n  async hasDependencesChanged() {\n    const remotePackage = await this.plugin.bucketService.downloadDependencesFile();\n\n    let isDifferent = true;\n    if (!remotePackage) {\n      this.plugin.log('Remote package.json file not found!');\n      return isDifferent;\n    }\n\n    const parsedRemotePackage = JSON.parse(remotePackage);\n    const { dependencies, checksum } = parsedRemotePackage;\n    this.plugin.log('Comparing package.json dependencies...');\n    isDifferent = await this.isDiff(dependencies, this.localPackage.dependencies);\n    if (isDifferent) {\n      this.plugin.log(chalk.inverse.yellow(' Dependency list mismatch! '));\n      return isDifferent;\n    }\n\n    if (this.plugin.settings.useChecksum) {\n      this.plugin.log('Comparing package.json checksum...');\n      const local = this.getCompiledLayerPackageJson();\n      this.plugin.log(`Remote checksum: ${checksum}`);\n      this.plugin.log(`Local checksum: ${local.checksum}`);\n      isDifferent = checksum !== local.checksum;\n      if (isDifferent) {\n        this.plugin.log(chalk.inverse.yellow(' Checksum mismatch! '));\n        return isDifferent;\n      }\n      this.plugin.log(chalk.inverse.green(' Checksums are identical! '));\n    }\n\n    return isDifferent;\n  }\n}\n\nmodule.exports = NodeJSRuntime;\n"],"file":"nodejs.js"}